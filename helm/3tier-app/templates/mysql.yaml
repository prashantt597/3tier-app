apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.mysql.auth.rootPassword }}
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.auth.database }}
        - name: MYSQL_USER
          value: {{ .Values.mysql.auth.username }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.mysql.auth.password }}
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mysql-pvc
      - name: mysql-initdb
        configMap:
          name: {{ .Release.Name }}-mysql-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mysql-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: {{ .Values.mysql.primary.persistence.size }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-mysql-initdb
  namespace: {{ .Release.Namespace }}
data:
  init.sql: |-
    {{ .Files.Get "mysql-init/init.sql" | nindent 4 }}